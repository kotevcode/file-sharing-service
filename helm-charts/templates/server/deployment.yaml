apiVersion: apps/v1
kind: Deployment
metadata:
  name: file-sharing-server
spec:
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      app: file-sharing-server
  template:
    metadata:
      labels:
        app: file-sharing-server
    spec:
      containers:
        - name: server
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.server.config.port }}
          env:
            - name: PORT
              value: "{{ .Values.server.config.port }}"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: file-sharing-server-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASS
              valueFrom:
                secretKeyRef:
                  name: file-sharing-server-secret
                  key: POSTGRES_PASS
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: file-sharing-server-secret
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: file-sharing-server-secret
                  key: POSTGRES_HOST
            - name: AWS_S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: file-sharing-server-secret
                  key: AWS_S3_BUCKET
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: file-sharing-server-secret
                  key: AWS_REGION
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: file-sharing-server-secret
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: file-sharing-server-secret
                  key: AWS_SECRET_ACCESS_KEY 
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health-check
              port: {{ .Values.server.config.port }}
              scheme: HTTP
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 20
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health-check
              port: {{ .Values.server.config.port }}
              scheme: HTTP
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 20
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi