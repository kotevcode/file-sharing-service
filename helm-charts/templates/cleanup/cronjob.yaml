apiVersion: batch/v1
kind: CronJob
metadata:
  name: file-cleanup
spec:
  schedule: {{ .Values.cleanup.schedule | quote }}
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: cleanup
              image: "{{ .Values.cleanup.image.repository }}:{{ .Values.cleanup.image.tag }}"
              imagePullPolicy: {{ .Values.cleanup.image.pullPolicy }}
              command: ["node", "dist/jobs/runner.js", "cleanup"]
              env:
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: file-sharing-server-secret
                      key: POSTGRES_USER
                - name: POSTGRES_PASS
                  valueFrom:
                    secretKeyRef:
                      name: file-sharing-server-secret
                      key: POSTGRES_PASS
                - name: POSTGRES_DB
                  valueFrom:
                    secretKeyRef:
                      name: file-sharing-server-secret
                      key: POSTGRES_DB
                - name: POSTGRES_HOST
                  valueFrom:
                    secretKeyRef:
                      name: file-sharing-server-secret
                      key: POSTGRES_HOST
                - name: AWS_S3_BUCKET
                  valueFrom:
                    secretKeyRef:
                      name: file-sharing-server-secret
                      key: AWS_S3_BUCKET
                - name: AWS_REGION
                  valueFrom:
                    secretKeyRef:
                      name: file-sharing-server-secret
                      key: AWS_REGION
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: file-sharing-server-secret
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: file-sharing-server-secret
                      key: AWS_SECRET_ACCESS_KEY
          restartPolicy: OnFailure 